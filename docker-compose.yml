services:
  app1:
    build: .
    container_name: app1
    expose:
      - "8080"
    environment:
      - PORT=8080
      - MONGODB_URI=mongodb://mongodb:27017/itemsdb
      - HOST=app1
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - loadbalancing
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  app2:
    build: .
    container_name: app2
    expose:
      - "8080"
    environment:
      - PORT=8080
      - MONGODB_URI=mongodb://mongodb:27017/itemsdb
      - HOST=app2
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - loadbalancing
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongodb
    expose:
      - "27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=itemsdb
    command: ["mongod", "--auth", "--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - loadbalancing
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "27017:27017"
    volumes: 
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/stream.d:/etc/nginx/stream.d:ro
      - nginx_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    depends_on:
      app1:
        condition: service_healthy
      app2:
        condition: service_healthy
    networks:
      - loadbalancing
    restart: unless-stopped

volumes:
  mongodb_data:
    name: mongodb_data
  mongodb_config:
    name: mongodb_config
  nginx_logs:
    name: nginx_logs

networks:
  loadbalancing:
    driver: bridge
    name: loadbalancing 


    #$